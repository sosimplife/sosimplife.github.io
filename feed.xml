<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Empty</title>
    <description>Empty.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 09 Nov 2019 08:10:09 +0800</pubDate>
    <lastBuildDate>Sat, 09 Nov 2019 08:10:09 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Python中的对象</title>
        <description>&lt;p&gt;在面向对象编程中，“类”和“对象”是非常重要的概念。对象是客观事物的反映，而类是对象的抽象。Python是一门面向对象的语言，在Python中一切都是对象。为了实现面向对象理论中的“类”和“对象”，Python通过构建&lt;code class=&quot;highlighter-rouge&quot;&gt;类型对象&lt;/code&gt;来实现“类”的概念；通过类型对象的实例对象构建“对象”的概念。&lt;/p&gt;

&lt;h1 id=&quot;1-类型对象&quot;&gt;1. 类型对象&lt;/h1&gt;
&lt;p&gt;Python首先定义了&lt;code class=&quot;highlighter-rouge&quot;&gt;PyObjectType&lt;/code&gt;数据类型，作为抽象&lt;code class=&quot;highlighter-rouge&quot;&gt;类型对象&lt;/code&gt;的“类”。&lt;/p&gt;

&lt;p&gt;接着，以&lt;code class=&quot;highlighter-rouge&quot;&gt;PyObjectType&lt;/code&gt;定义变量&lt;code class=&quot;highlighter-rouge&quot;&gt;PyType_Type&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;PyType_Type&lt;/code&gt;是所有类型对象的基础。&lt;/p&gt;

&lt;p&gt;以Int对象为例，以&lt;code class=&quot;highlighter-rouge&quot;&gt;PyObjectType&lt;/code&gt;定义变量&lt;code class=&quot;highlighter-rouge&quot;&gt;PyInt_Type&lt;/code&gt;, 用以描述Int类型，而该变量又通过指针关联了变量&lt;code class=&quot;highlighter-rouge&quot;&gt;PyType_Type&lt;/code&gt;，面向对象概念中的“基类”便是由此实现的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/2019_11_02_object_in_python_1.png&quot; alt=&quot;类型对象关系图&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-pyobject&quot;&gt;2. PyObject&lt;/h1&gt;
&lt;p&gt;Python中定义的所有对象包含一些相同的内容，这些内容通过&lt;code class=&quot;highlighter-rouge&quot;&gt;PyObject&lt;/code&gt;来定义，而&lt;code class=&quot;highlighter-rouge&quot;&gt;PyObject&lt;/code&gt;中由宏定义PyObject_HEAD组成。所有Python定义的数据类型的开始都是由该对象组成。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define PyObject_HEAD			\
	_PyObject_HEAD_EXTRA		\
	Py_ssize_t ob_refcnt;		\
	struct _typeobject *ob_type;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyObject_HEAD&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 02 Nov 2019 22:20:00 +0800</pubDate>
        <link>http://yourdomain.com/python/object/2019/11/02/object-in-python.html</link>
        <guid isPermaLink="true">http://yourdomain.com/python/object/2019/11/02/object-in-python.html</guid>
        
        
        <category>python</category>
        
        <category>object</category>
        
      </item>
    
      <item>
        <title>利用Jekyll在Github上搭建个人主页</title>
        <description>&lt;p&gt;Jekyll是一个用于创建&lt;code class=&quot;highlighter-rouge&quot;&gt;静态网站&lt;/code&gt;的工具，用户编写的&lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt;文件转换成精美的Html文件。什么是静态网站呢？所谓静态网站是指所有的网站内容都是由Html文件组成，不会使用ASP/Javascript/PHP等语言，也不使用数据库。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Github Page&lt;/code&gt;是Github为每个账号提供的个人博客服务，支持静态网站。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;1-jekyll安装&quot;&gt;1. Jekyll安装&lt;/h1&gt;

&lt;p&gt;本文的安装环境是&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 18.04.3 LTS&lt;/code&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#=&amp;gt; 安装 Jekyll&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install jekyll
&lt;span class=&quot;c&quot;&gt;#=&amp;gt; 创建一个博客&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;jekyll new &amp;lt;your blog name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jekyll已经创建了一个Blog，将&lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt;文件夹下的markdown文件改名为md文件。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#=&amp;gt; 编译&lt;/span&gt;
jekyll build
&lt;span class=&quot;c&quot;&gt;#=&amp;gt; 在本地运行Blog&lt;/span&gt;
jekyll server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;打开浏览器，访问&lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1：4000&lt;/code&gt;访问Blog。&lt;/p&gt;

&lt;h1 id=&quot;2-github-page设置&quot;&gt;2. Github Page设置&lt;/h1&gt;

&lt;p&gt;注册Github账号，启用Github Page，Github Page是一个特殊的代码仓库，其名字与Github账号名相同，向该仓库中上传网站代码，通过访问&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;用户名&amp;gt;.github.io&lt;/code&gt;域名即可浏览网站。&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;目录下创建本地仓库，并将其推送到Github Page仓库。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#=&amp;gt; 在本地运行Blog&lt;/span&gt;
git init
git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;First blog&quot;&lt;/span&gt;
git remote add origin &amp;lt;仓库网址&amp;gt;
git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 18 Oct 2019 23:09:00 +0800</pubDate>
        <link>http://yourdomain.com/jekyll/github/2019/10/18/start-with-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/github/2019/10/18/start-with-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 18 Oct 2019 22:29:26 +0800</pubDate>
        <link>http://yourdomain.com/jekyll/update/2019/10/18/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2019/10/18/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
